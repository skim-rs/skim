on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

name: release-please

jobs:
  release_please:
    name: release-please
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        with:
          release-type: rust
          bump-minor-pre-major: true
          bump-patch-for-minor-pre-major: true
    outputs:
      release_created: steps.release.outputs.release_created
      tag_name: steps.release.outputs.tag_name
  build:
    if: ${{ jobs.release_please.outputs.release_created }}
    name: Build release binaries
    strategy:
      matrix:
        arch:
          - x86_64
          - aarch64
          - arm
          - armv7
        os:
          - unknown-linux-musl
          - apple-darwin
        exclude:
          - arch: arm
            os: apple-darwin
          - arch: armv7
            os: apple-darwin
    runs-on: ${{ contains(matrix.os, 'apple') && 'macos' || 'ubuntu' }}-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Build
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: build
          target: ${{ matrix.arch }}-${{ matrix.os }}${{ contains(matrix.arch, 'arm') && 'eabi' || '' }}
          args: "--release --locked"
      - name: Test
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: test
          target: ${{ matrix.arch }}-${{ matrix.os }}${{ contains(matrix.arch, 'arm') && 'eabi' || '' }}
          args: "-p skim --release --locked"
      - name: E2E
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: test
          target: ${{ matrix.arch }}-${{ matrix.os }}${{ contains(matrix.arch, 'arm') && 'eabi' || '' }}
          args: "-p e2e --release --locked -j8"
      - name: Create archive
        run: |
          tar -C target/*/release/ -czvf "skim-${{ matrix.arch }}-${{ matrix.os }}${{ contains(matrix.arch, 'arm') && 'eabi' || '' }}.tgz" "${{ env.BIN_NAME }}"
      - name: Store artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.arch }}-${{ matrix.os }}
          path: "skim-*.tgz"
          retention-days: 1
  release-files:
    runs-on: ubuntu-22.04
    if: ${{ jobs.release_please.outputs.release_created }}
    steps:
      - name: Checkout Git repo
        uses: actions/checkout@v4
      - name: Install correct toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true
      - name: Generate manpage
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --package xtask mangen
      - name: Generate completions
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --package xtask compgen
      - name: Create release archives
        run: |
          mkdir artifacts
          tar -C man -czvf artifacts/man.tgz man1
          tar -C shell -czvf artifacts/shell.tgz .
      - name: Store artifacts
        uses: actions/upload-artifact@v4
        with:
          name: files
          path: "artifacts/*.tgz"
          retention-days: 1
  release-artifacts:
    runs-on: ubuntu-22.04
    needs:
      - build
      - release-files
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: "*"
          merge-multiple: true
      - name: Upload Release Artifact
        if: ${{ jobs.release_please.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ steps.release.outputs.tag_name }} ./artifacts/*.tgz
