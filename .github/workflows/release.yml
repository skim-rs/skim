on:
  push:
    branches:
      - master

name: release

jobs:
  release-pr:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.SKIM_RS_BOT_APP_ID }}
          private-key: ${{ secrets.SKIM_RS_BOT_PRIVATE_KEY }}
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Install correct toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - id: release-pr
        uses: release-plz/action@v0.5
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        with:
          config: .github/release-plz.toml
    outputs:
      release_created: ${{ steps.release-pr.outputs.releases_created }}
      tag_name: ${{ fromJSON(steps.release-pr.outputs.releases)[0].tag }}

  setup-release:
    runs-on: ubuntu-latest
    needs: release-pr
    if: ${{ needs.release-pr.outputs.release_created == 'true' }}
    steps:
      - run: |
          echo '${{ needs.release-pr.outputs.release_created }}'
    outputs:
      tag_name: ${{ needs.release-pr.outputs.tag_name }}

  # publish-crate:
  #   runs-on: ubuntu-latest
  #   needs: setup-release
  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v4
  #     with:
  #       fetch-depth: 1
  #   - name: Install correct toolchain
  #     uses: actions-rs/toolchain@v1
  #     with:
  #       toolchain: stable
  #   - name: Run cargo check
  #     uses: actions-rs/cargo@v1
  #     with:
  #       command: check
    # - name: Publish to crates.io
    #   run: cargo publish -p skim
    #   env:
    #     CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

  build-binaries:
    needs: setup-release
    name: Build release binaries
    permissions:
      contents: write
    strategy:
      matrix:
        arch:
          - x86_64
          - aarch64
          - arm
          - armv7
        os:
          - unknown-linux-musl
          - apple-darwin
        exclude:
          - arch: arm
            os: apple-darwin
          - arch: armv7
            os: apple-darwin
    runs-on: ${{ contains(matrix.os, 'apple') && 'macos' || 'ubuntu' }}-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Build
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: build
          target: ${{ matrix.arch }}-${{ matrix.os }}${{ contains(matrix.arch, 'arm') && 'eabi' || '' }}
          args: "--release --locked"
      - name: Create archive
        env:
          BIN_NAME: "sk"
          ARCHIVE_NAME: "skim-${{ matrix.arch }}-${{ matrix.os }}${{ contains(matrix.arch, 'arm') && 'eabi' || '' }}.tgz"
        run: |
          tar -C target/*/release/ -czvf "$ARCHIVE_NAME" "$BIN_NAME"
      - name: Upload binary
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ needs.setup-release.outputs.tag_name }}
          ARCHIVE_NAME: "skim-${{ matrix.arch }}-${{ matrix.os }}${{ contains(matrix.arch, 'arm') && 'eabi' || '' }}.tgz"
        run: |
          gh release upload "$TAG" "$ARCHIVE_NAME"
